-- 创建数据库
CREATE DATABASE image_processing_db;

-- 使用数据库
USE image_processing_db;

-- 创建用户表
CREATE TABLE users (
    _id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    avatar_id VARCHAR(50) NOT NULL,
    useravailableScore INT DEFAULT 0,
    role VARCHAR(20) DEFAULT 'user',
    membershipLevel VARCHAR(20) DEFAULT 'bronze',
    refreshToken VARCHAR(255),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 创建图片表
CREATE TABLE user_images (
    image_id INT PRIMARY KEY AUTO_INCREMENT,
    _id INT NOT NULL,
    image_name VARCHAR(255) NOT NULL,
    image_path VARCHAR(255) NOT NULL,
    image_type VARCHAR(50) NOT NULL,
    image_metadata JSON,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (_id) REFERENCES users(_id) ON DELETE CASCADE
);


1. 创建表结构
创建 images 表
这个表存储图片的基本信息，包括图片 ID 和其他元数据。
sql
复制
CREATE TABLE images (
    image_id INT PRIMARY KEY AUTO_INCREMENT,
    image_name VARCHAR(255) NOT NULL,
    image_path VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
创建 tags 表
这个表存储所有的标签信息。
sql
复制
CREATE TABLE tags (
    tag_id INT PRIMARY KEY AUTO_INCREMENT,
    tag_name VARCHAR(50) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
创建 image_tags 表
这个表存储图片和标签之间的关系，是一个多对多关系表。
sql
复制
CREATE TABLE image_tags (
    image_id INT,
    tag_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (image_id, tag_id),
    FOREIGN KEY (image_id) REFERENCES images(image_id) ON DELETE CASCADE,
    FOREIGN KEY (tag_id) REFERENCES tags(tag_id) ON DELETE CASCADE
);
2. 插入数据
插入图片
sql
复制
INSERT INTO images (image_name, image_path) VALUES ('photo1.jpg', '/path/to/photo1.jpg');
INSERT INTO images (image_name, image_path) VALUES ('photo2.jpg', '/path/to/photo2.jpg');
插入标签
sql
复制
INSERT INTO tags (tag_name) VALUES ('人');
INSERT INTO tags (tag_name) VALUES ('猫');
INSERT INTO tags (tag_name) VALUES ('狗');
INSERT INTO tags (tag_name) VALUES ('马');
INSERT INTO tags (tag_name) VALUES ('其他');
插入图片和标签的关系
sql
复制
-- 假设 photo1 的 image_id 是 1，photo2 的 image_id 是 2
-- 假设 标签 '人' 的 tag_id 是 1，'猫' 是 2，'狗' 是 3，'马' 是 4，'其他' 是 5

INSERT INTO image_tags (image_id, tag_id) VALUES (1, 1); -- photo1 标签 '人'
INSERT INTO image_tags (image_id, tag_id) VALUES (1, 2); -- photo1 标签 '猫'
INSERT INTO image_tags (image_id, tag_id) VALUES (1, 3); -- photo1 标签 '狗'
INSERT INTO image_tags (image_id, tag_id) VALUES (1, 5); -- photo1 标签 '其他'

INSERT INTO image_tags (image_id, tag_id) VALUES (2, 3); -- photo2 标签 '狗'
INSERT INTO image_tags (image_id, tag_id) VALUES (2, 4); -- photo2 标签 '马'

3. 查询数据
查询某个标签对应的所有图片
sql
复制
SELECT i.image_id, i.image_name, i.image_path
FROM images i
JOIN image_tags it ON i.image_id = it.image_id
JOIN tags t ON it.tag_id = t.tag_id
WHERE t.tag_name = '狗';
这个查询会返回所有标签为 '狗' 的图片信息。

CREATE TABLE system_images (
    id INT PRIMARY KEY AUTO_INCREMENT,
    image_name VARCHAR(255) NOT NULL,
    image_path VARCHAR(255) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

增加一个 balance 字段，用于存储用户的账户余额。
ALTER TABLE users ADD COLUMN balance DECIMAL(10, 2) DEFAULT 0;

充值记录表:创建一个表用于存储用户的充值记录
CREATE TABLE recharges (
    recharge_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    amount DECIMAL(10, 2),
    status VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(_id)
);

-------------------------
依据chaotao建立，构建扩充表：
CREATE TABLE images_ext (
    id VARCHAR(255) PRIMARY KEY,
    name VARCHAR(255),
    defaultUrl VARCHAR(255),
    colorUrl VARCHAR(255),
    title VARCHAR(255),
    description TEXT,
    tags JSON,
    type VARCHAR(50),
    ratio VARCHAR(10),
    isPublic BOOLEAN,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    prompt TEXT,
    userId VARCHAR(255),
    categoryId VARCHAR(255),
    size VARCHAR(50),
    additionalInfo JSON
);
ALTER TABLE images_ext ADD COLUMN crt_task_id VARCHAR(255);
--------------------------
图像举报功能：
CREATE TABLE image_reports (
    report_id INT AUTO_INCREMENT PRIMARY KEY,
    image_id VARCHAR(255),
    user_id INT, -- 修改为 INT 类型
    content TEXT,
    report_type VARCHAR(50),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (image_id) REFERENCES images_ext(id),
    FOREIGN KEY (user_id) REFERENCES users(_id)
);

ALTER TABLE users ADD COLUMN membershipExpiry DATETIME NULL;
ALTER TABLE users ADD COLUMN resetPasswordToken VARCHAR(255);




-- 创建 categories 表
CREATE TABLE categories (
  category_id INT AUTO_INCREMENT PRIMARY KEY,
  category_code VARCHAR(255) NOT NULL,
  category_alias VARCHAR(255) NOT NULL,
  display_name_zh VARCHAR(255) NOT NULL,
  display_name_en VARCHAR(255) NOT NULL,
  description_zh TEXT NOT NULL,
  description_en TEXT NOT NULL
);

-- 创建 newtags 表
CREATE TABLE newtags (
  tag_id INT AUTO_INCREMENT PRIMARY KEY,
  tag_code VARCHAR(255) NOT NULL,
  tag_alias VARCHAR(255) NOT NULL,
  display_name_zh VARCHAR(255) NOT NULL,
  display_name_en VARCHAR(255) NOT NULL
);

-- 创建 new_image_tags 表
CREATE TABLE new_image_tags (
  image_id CHAR(36),
  tag_id INT,
  PRIMARY KEY (image_id, tag_id),
  CONSTRAINT fk_image_new
  FOREIGN KEY (image_id) REFERENCES images_ext(id),
  CONSTRAINT fk_tag_new
  FOREIGN KEY (tag_id) REFERENCES newtags(tag_id)
);




-- 添加 category_id 字段
ALTER TABLE images_ext
ADD COLUMN category_id INT;

-- 添加外键约束
ALTER TABLE images_ext
ADD CONSTRAINT fk_category
FOREIGN KEY (category_id) REFERENCES categories(category_id);

ALTER TABLE categories ADD COLUMN thumbnailUrl VARCHAR(255);